{% extends 'AdminWebMailBundle::base.html.twig' %}

{% block body %}
    <h1>Aliases</h1>
    <div class="row">
        <div class="col-sm-12">
            <div id="toolbar" disabled="disabled">
                <button class="btn btn-success" data-toggle="modal" data-target="#addAliasModal">Add Alias</button>
            </div>
            <table id="table"
                   data-toolbar="#toolbar"
                   data-search="true"
                   data-show-refresh="true"
                   data-show-toggle="true"
                   data-show-columns="true"
                   data-unique-id="id"

                   data-show-export="true"
                   data-export-types="['txt','csv','excel','png','pdf']"
                   data-export-data-type="all"

                   data-minimum-count-columns="1"
                   data-show-pagination-switch="true"
                   data-pagination="true"
                   data-id-field="id"
                   data-page-list="[10, 25, 50, 100, ALL]"
                   data-show-footer="false"
                   data-url="{{ path('get_aliases') }}"
            >
            </table>
        </div>
    </div>


    <!--Modals-->

    <!-- Modal Add Alias -->
    <div id="addAliasModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Insert info</h4>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-12">
                            <form>
                                <div class="form-group" id="newAliasSourceTextGroup">
                                    <label class="control-label" for="newAliasSourceText">Alias Source</label>

                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="glyphicon glyphicon-import"></i></span>
                                        <input id="newAliasSourceText" type="email" class="form-control" placeholder="testAlias@sefirosweb.es">
                                    </div>
                                </div>

                                <div class="form-group" id="newAliasDestinationTextGroup">
                                    <label class="control-label" for="newAliasDestinationText">Alias Destination</label>

                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="glyphicon glyphicon-export"></i></span>
                                        <input id="newAliasDestinationText" type="email" class="form-control" placeholder="postmaster@sefirosweb.es">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" style="float:left;" id="createAliasBtn">Create Alias</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>


{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>
        var $table = $('#table');
        var errorGlyphicon = '<span class="glyphicon glyphicon-remove form-control-feedback error-label"></span>';

        window.operateEvents = {
            'click .remove': function (e, value, row, index) {
                $table.bootstrapTable('showLoading');
                $.ajax({
                    type: "DELETE",
                    data: {
                        "id": row.id
                    },
                    url: "{{ path('delete_aliases') }}",
                    dataType: "json",
                    success: function (data) {
                        if (data["success"] == "true") {
                            notify("Alias deleted", "warning");
                            $table.bootstrapTable('remove', {
                                field: 'id',
                                values: [row.id]
                            });
                        } else {
                            notify(data["error"], "danger");
                        }
                    },
                    error: function (data) {
                        notify("Error on alias", "danger");
                        console.log(data);
                    },
                    complete: function () {
                        $table.bootstrapTable('hideLoading');
                    }
                });
            }
        };

        $(document).ready(function () {
            $table.bootstrapTable({
                columns: [{
                    field: 'id',
                    title: 'ID',
                    sortable: true,
                    align: 'center',
                    visible: false
                }, {
                    field: 'source',
                    title: 'Source',
                    sortable: true,
                    align: 'center'
                }, {
                    field: 'destination',
                    title: 'Destination',
                    sortable: true,
                    align: 'center'
                }, {
                    field: 'operate',
                    title: 'Item Operate',
                    align: 'center',
                    formatter: function (value, row, index) {
                        return ['<a class="remove" href="#" title="Remove"><i class="glyphicon glyphicon-remove"></i></a>']
                    },
                    events: operateEvents
                }]
            });


            $('#createAliasBtn').click(function () {
                if (checkAlias($("#newAliasSourceText, #newAliasDestinationText"))) {
                    $table.bootstrapTable('showLoading');
                    $('#addAliasModal').modal('hide');
                    $.ajax({
                        type: "POST",
                        data: {
                            "source": $("#newAliasSourceText").val(),
                            "destination": $("#newAliasDestinationText").val()
                        },
                        url: "{{ path('add_aliases') }}",
                        dataType: "json",
                        success: function (data) {
                            if (data["success"] == "true") {
                                notify("Alias created", "success");
                                $table.bootstrapTable('prepend', data["alias"]);
                            } else {
                                notify(data["error"], "danger");
                            }
                        },
                        error: function (data) {
                            notify("Error on create domain", "danger");
                            console.log(data);
                        },
                        complete: function () {
                            $table.bootstrapTable('hideLoading');
                        }
                    });
                }
            });

            //Check text alias
            $("#newAliasSourceText, #newAliasDestinationText")
                    .blur(function () {
                        checkAlias($(this));
                    })
                    .focus(function () {
                        $(this).popover('hide');
                        $(this).parent().find(".error-label").remove();
                        $(this).parent().parent().removeClass("has-error has-success");
                    });

            function checkAlias($textBox) {
                if ($textBox.val() != "") {
                    $textBox.parent().parent().addClass("has-success");
                    return true;
                } else {
                    $textBox.parent().parent().addClass("has-error");
                    popoverShow($textBox, 'Cannot be empty!', 'top', 'danger');
                    $textBox.after(errorGlyphicon);
                    return false;
                }
            }

            //Clear modal
            $('.modal').on('hidden.bs.modal', function () {
                $(this).find('input').val("");
                $(this).find('.error-label').remove();
                $(this).find('.has-error, .has-success').removeClass("has-error has-success");
                $(this).find('.popover').popover('hide');
            });


        });
    </script>
{% endblock %}

