{% extends 'AdminWebMailBundle::base.html.twig' %}

{% block body %}
    <h1>Users</h1>
    <div class="row">
        <div class="col-sm-12">
            <div id="toolbar" disabled="disabled">
                <button class="btn btn-success" data-toggle="modal" data-target="#addMailModal">Add Mail</button>
            </div>
            <table id="table"
                   data-toolbar="#toolbar"
                   data-search="true"
                   data-show-refresh="true"
                   data-show-toggle="true"
                   data-show-columns="true"
                   data-unique-id="id"

                   data-show-export="true"
                   data-export-types="['txt','csv','excel','png','pdf']"
                   data-export-data-type="all"

                   data-minimum-count-columns="1"
                   data-show-pagination-switch="true"
                   data-pagination="true"
                   data-id-field="id"
                   data-page-list="[10, 25, 50, 100, ALL]"
                   data-show-footer="false"
                   data-url="{{ path('get_users') }}"
            >
            </table>
        </div>
    </div>


    <!--Modals-->

    <!-- Modal Add Mail -->
    <div id="addMailModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Insert info</h4>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-12">
                            <form>

                                <div class="form-group" id="newEmailTextGroup">
                                    <label class="control-label" for="newEmailText">Email address</label>

                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                        <input id="newEmailText" type="email" class="form-control" placeholder="Email" value="testMail@sefirosweb.es">
                                    </div>
                                </div>

                                <div>
                                    <div class="form-group" id="newPasswordTextGroup1">
                                        <label class="control-label" for="newPasswordText1">Password</label>

                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            <input id="newPasswordText1" type="password" class="form-control" placeholder="Email" value="1234">
                                        </div>
                                    </div>

                                    <div class="form-group" id="newPasswordTextGroup2">
                                        <label class="control-label" for="newPasswordText2">Repeat Password</label>

                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            <input id="newPasswordText2" type="password" class="form-control" placeholder="Email" value="1234">
                                        </div>
                                    </div>
                                </div>

                            </form>
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" style="float:left;" id="createMailBtn">Create Mail</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

    <!-- Modal change password -->
    <div id="changePasswordModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="changePasswordModalTitle"></h4>
                </div>
                <div class="modal-body">

                    <div class="row">
                        <div class="col-sm-12">
                            <form>

                                <div>
                                    <div class="form-group" id="changePasswordTextGroup1">
                                        <label class="control-label" for="changePasswordText1">Password</label>

                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            <input id="changePasswordText1" type="password" class="form-control" placeholder="Email">
                                        </div>
                                    </div>

                                    <div class="form-group" id="changePasswordTextGroup2">
                                        <label class="control-label" for="changePasswordText2">Repeat Password</label>

                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                                            <input id="changePasswordText2" type="password" class="form-control" placeholder="Email">
                                        </div>
                                    </div>
                                </div>

                            </form>
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" style="float:left;" id="changePasswordBtn">Change Password</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <!--!End Modals-->
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script>
        var $table = $('#table');
        var idUserPassword;

        window.operateEvents = {
            'click .remove': function (e, value, row, index) {
                $table.bootstrapTable('showLoading');
                $.ajax({
                    type: "DELETE",
                    data: {
                        "id": row.id
                    },
                    url: "{{ path('delete_users') }}",
                    dataType: "json",
                    success: function (data) {
                        if (data["success"] == "true") {
                            notify("User deleted", "warning");
                            $table.bootstrapTable('remove', {
                                field: 'id',
                                values: [row.id]
                            });
                        } else {
                            notify(data["error"], "danger");
                        }
                    },
                    error: function (data) {
                        notify("Error on delete user", "danger");
                        console.log(data);
                    },
                    complete: function () {
                        $table.bootstrapTable('hideLoading');
                    }
                });
            },
            'click .password': function (e, value, row, index) {
                idUserPassword = row["id"];
                $('#changePasswordModalTitle').html('Change password for: ' + row['email']);
                $('#changePasswordModal').modal('show');
            }
        };


        $(document).ready(function () {
            var $domains = JSON.parse('{{(domains|json_encode|raw)}}');

            $table.bootstrapTable({
                columns: [{
                    field: 'id',
                    title: 'ID',
                    sortable: true,
                    align: 'center',
                    visible: false
                }, {
                    field: 'email',
                    title: 'Email',
                    sortable: true,
                    editable: {
                        type: 'text',
                        title: 'Email Address',
                        validate: function (value) {
                            value = $.trim(value);
                            if (!value) {
                                return 'This field is required';
                            }
                            if ((error = checkDomain(value)) != "true") {
                                return error;
                            }
                            var dataUser = $table.bootstrapTable('getData'), index = $(this).parents('tr').data('index');
                            var oldEmail = dataUser[index]["email"];

                            $table.bootstrapTable('showLoading');
                            $.ajax({
                                type: "PUT",
                                data: {
                                    "id": dataUser[index]["id"],
                                    "email": value
                                },
                                url: "{{ path('update_email_users') }}",
                                dataType: "json",
                                success: function (data) {
                                    if (data["success"] == "true") {
                                        $table.bootstrapTable('updateByUniqueId', {id: dataUser[index]["id"], row: {domain: data["domainId"]}});
                                        notify("Update successfully", "success");
                                    } else {
                                        notify(data["error"], "danger");
                                        $table.bootstrapTable('updateByUniqueId', {id: dataUser[index]["id"], row: {email: oldEmail}});
                                    }
                                },
                                error: function () {
                                    notify("Error on update user", "danger");
                                    $table.bootstrapTable('updateByUniqueId', {id: dataUser[index]["id"], row: {email: oldEmail}});
                                },
                                complete: function () {
                                    $table.bootstrapTable('hideLoading');
                                }
                            });
                            return '';
                        }
                    },
                    align: 'center'

                }, {
                    field: 'domain',
                    title: 'Domain',
                    sortable: true,
                    editable: {
                        type: 'select',
                        title: 'Email Address',
                        source: $domains,
                        validate: function (value) {

                            var dataUser = $table.bootstrapTable('getData'), index = $(this).parents('tr').data('index');
                            var oldDomain = dataUser[index]["domain"];

                            $table.bootstrapTable('showLoading');
                            $.ajax({
                                type: "PUT",
                                data: {
                                    "id": dataUser[index]["id"],
                                    "domain": value
                                },
                                url: "{{ path('update_domain_users') }}",
                                dataType: "json",
                                success: function (data) {
                                    if (data["success"] == "true") {
                                        notify("Update successfully", "success");
                                    } else {
                                        notify(data["error"], "danger");
                                        $table.bootstrapTable('updateByUniqueId', {id: dataUser[index]["id"], row: {domain: oldDomain}});
                                    }
                                },
                                error: function () {
                                    notify("Error on update domain", "danger");
                                    $table.bootstrapTable('updateByUniqueId', {id: dataUser[index]["id"], row: {domain: oldDomain}});
                                },
                                complete: function () {
                                    $table.bootstrapTable('hideLoading');
                                }
                            });
                            return '';
                        }
                    },
                    align: 'center'
                }, {
                    field: 'operate',
                    title: 'Item Operate',
                    align: 'center',
                    formatter: function (value, row, index) {
                        return [
                            '<a class="password" href="#" title="Change Password"><i class="glyphicon glyphicon-lock"></i></a> ' +
                            '<a class="remove" href="#" title="Remove"><i class="glyphicon glyphicon-remove"></i></a>'
                        ]
                    },
                    events: operateEvents,

                }]
            });

            var errorGlyphicon = '<span class="glyphicon glyphicon-remove form-control-feedback error-label"></span>';

            /*
             * New User
             */
            $("#createMailBtn").click(function () {
                if (checkEmail() && checkRepeatPassword()) {
                    $table.bootstrapTable('showLoading');
                    $('#addMailModal').modal('hide');
                    $.ajax({
                        type: "POST",
                        data: {
                            "newEmailText": $("#newEmailText").val(),
                            "newPasswordText1": $("#newPasswordText1").val(),
                            "newPasswordText2": $("#newPasswordText2").val()
                        },
                        url: "{{ path('add_users') }}",
                        dataType: "json",
                        success: function (data) {
                            if (data["success"] == "true") {
                                notify("User created", "success");
                                $table.bootstrapTable('prepend', data["user"]);
                            } else {
                                notify(data["error"], "danger");
                            }
                        },
                        error: function (data) {
                            notify("Error on create user", "danger");
                            console.log(data);
                        },
                        complete: function () {
                            $table.bootstrapTable('hideLoading');
                        }
                    });

                }
            });


            /*
             * Modal checks
             */

            $("#newEmailText")
                    .blur(function () {
                        checkEmail();
                    })
                    .focus(function () {
                        $(this).parent().parent().removeClass("has-error has-success");
                        $("#newEmailText").popover('hide');
                    });

            function checkEmail() {
                $("#newEmailTextGroup").find(".error-label").remove();
                if ((error = checkDomain($("#newEmailText").val())) == "true") {
                    $("#newEmailTextGroup").addClass("has-success");
                    return true;
                } else {
                    $("#newEmailTextGroup").addClass("has-error");
                    popoverShow('newEmailText', error, 'top', 'danger');
                    $("#newEmailText").after(errorGlyphicon);
                    return false;
                }
            }

            $("#newPasswordText1, #newPasswordText2")
                    .blur(function () {
                        checkRepeatPassword();
                    })
                    .focus(function () {
                        $("#newPasswordText1, #newPasswordText2").parent().parent().removeClass("has-error has-success");
                        $("#newPasswordText1").popover('hide');
                    });


            function checkRepeatPassword() {
                $("#newPasswordTextGroup1").parent().find(".error-label").remove();
                if ($("#newPasswordText1").val() == $("#newPasswordText2").val() && $("#newPasswordText1").val() != "") {
                    $("#newPasswordTextGroup1, #newPasswordTextGroup2").addClass("has-success");
                    return true;
                } else {
                    $("#newPasswordTextGroup1, #newPasswordTextGroup2").addClass("has-error");
                    $("#newPasswordText1, #newPasswordText2").after(errorGlyphicon);
                    popoverShow('newPasswordText1', 'Not is the same password!', 'top', 'danger');
                    return false;
                }
            }


            $('#addMailModal, #changePasswordModal').on('hidden.bs.modal', function () {
                $(this).find('input').val("");
                $(this).find('.error-label').remove();
                $(this).find('.has-error, .has-success').removeClass("has-error has-success");
                $(this).find('.popover').popover('hide');
            });


            //Check domain
            function checkDomain(mail) {
                var validMail = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);
                var find2At = new RegExp(/(@.*){2,}/);
                // Find if mail have two @
                if (!find2At.test(mail)) {
                    // Find if mail is correctly
                    if (validMail.test(mail)) {
                        //Find if domain is in text
                        for (var i = 0, len = $domains.length; i < len; i++) {
                            if (new RegExp('(@' + $domains[i]["text"] + ')$').test(mail)) {
                                return "true";
                            }
                        }
                    } else {
                        return "Insert correctly mail address";
                    }
                } else {
                    return "Error: two @ is not valid";
                }

                // Not domains found
                return "Not valid domain entered";
            }


            //Change password check
            $("#changePasswordText1, #changePasswordText2")
                    .blur(function () {
                        checkChangePassword();
                    })
                    .focus(function () {
                        $("#changePasswordText1, #changePasswordText2").parent().parent().removeClass("has-error has-success");
                        $("#changePasswordText1").popover('hide');
                    });

            function checkChangePassword() {
                $("#changePasswordTextGroup1").parent().find(".error-label").remove();
                if ($("#changePasswordText1").val() == $("#changePasswordText2").val() && $("#changePasswordText1").val() != "") {
                    $("#changePasswordTextGroup1, #changePasswordTextGroup2").addClass("has-success");
                    return true;
                } else {
                    $("#changePasswordTextGroup1, #changePasswordTextGroup2").addClass("has-error");
                    $("#changePasswordText1, #changePasswordText2").after(errorGlyphicon);
                    popoverShow('changePasswordText1', 'Not is the same password!', 'top', 'danger');
                    return false;
                }
            }

            /*
             * Change Password button
             */
            $("#changePasswordBtn").click(function () {
                if (checkChangePassword()) {
                    $table.bootstrapTable('showLoading');
                    $('#changePasswordModal').modal('hide');
                    $.ajax({
                        type: "PUT",
                        data: {
                            "id": idUserPassword,
                            "changePasswordText1": $("#changePasswordText1").val(),
                            "changePasswordText2": $("#changePasswordText2").val()
                        },
                        url: "{{ path('update_password_users') }}",
                        dataType: "json",
                        success: function (data) {
                            if (data["success"] == "true") {
                                notify("Password changed successfully", "success");
                            } else {
                                notify(data["error"], "danger");
                            }
                        },
                        error: function (data) {
                            notify("Error on change password", "danger");
                            console.log(data);
                        },
                        complete: function () {
                            $table.bootstrapTable('hideLoading');
                        }
                    });

                }
            });

        });


    </script>
{% endblock %}

